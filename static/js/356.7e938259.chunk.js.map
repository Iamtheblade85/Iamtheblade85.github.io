{"version":3,"file":"static/js/356.7e938259.chunk.js","mappings":"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","sources":["webpack://chaosx-18/./src/components/Checkbox/styles.module.scss?72ad","components/Checkbox/Checkbox.jsx","webpack://chaosx-18/./src/components/Modal/ViewNftDetailsModal/styles.module.scss?f380","components/Modal/ViewNftDetailsModal/ViewNftDetailsModal.jsx","webpack://chaosx-18/./src/components/Nft/MyNftCard/styles.module.scss?af69","components/Nft/MyNftCard/MyNftCard.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"whiteUnderlineHover\":\"styles_whiteUnderlineHover__0gjZ2\",\"orangeUnderlineHover\":\"styles_orangeUnderlineHover__PdWPO\",\"blueUnderlineHover\":\"styles_blueUnderlineHover__144nr\",\"divHoverEffect\":\"styles_divHoverEffect__TMP7T\",\"checkbox\":\"styles_checkbox__m1s8h\",\"input\":\"styles_input__pespy\",\"checkmark\":\"styles_checkmark__N+WTo\"};","import React from \"react\";\r\nimport styles from \"./styles.module.scss\";\r\n\r\nconst Checkbox = ({ checked, onChange }) => {\r\n  return (\r\n    <label className={styles.checkbox}>\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={checked}\r\n        onChange={onChange}\r\n        className={styles.input}\r\n      />\r\n      <span className={styles.checkmark}></span>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Checkbox;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"styles_container__D4eaI\",\"container_modal\":\"styles_container_modal__N-YSj\",\"container_modal_modalHeader\":\"styles_container_modal_modalHeader__mDdMf\",\"container_modal_modalHeader_close\":\"styles_container_modal_modalHeader_close__n218H\",\"container_modal_modalBody\":\"styles_container_modal_modalBody__3EY-c\",\"container_modal_modalFooter\":\"styles_container_modal_modalFooter__1ywde\",\"modalHeader\":\"styles_modalHeader__ObTYX\"};","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport styles from \"./styles.module.scss\";\r\nimport Button from \"../../Button/Button\";\r\nimport closeIcon from \"../../../assets/images/icons/icons8-close-48.png\";\r\n\r\nconst calculateProduction = (mineLevel, nftName) => {\r\n  const currentProduction = calculateSingleProduction(mineLevel, nftName);\r\n  const nextProduction = calculateSingleProduction(mineLevel + 1, nftName);\r\n  const currentCost = calculateUpgradeCost(mineLevel, nftName);\r\n  const nextCost = calculateUpgradeCost(mineLevel + 1, nftName);\r\n  const currentUpgradeTime = calculateUpgradeTime(mineLevel, nftName);\r\n  const nextUpgradeTime = calculateUpgradeTime(mineLevel + 1, nftName);\r\n\r\n  return {\r\n    currentProduction,\r\n    nextProduction,\r\n    currentCost,\r\n    nextCost,\r\n    currentUpgradeTime,\r\n    nextUpgradeTime,\r\n  };\r\n};\r\n\r\nconst calculateSingleProduction = (mineLevel, nftName) => {\r\n  return parseFloat(\r\n    (\r\n      (nftName === \"Chaos X-18 Mine Aurum\" ? 3 : 2) * mineLevel * Math.pow(1.12, mineLevel)\r\n    ).toFixed(3)\r\n  );\r\n};\r\n  \r\nconst calculateUpgradeCost = (mineLevel, nftName) => {\r\n  let aurumCost = 0;\r\n  let celiumCost = 0;\r\n  let upgradeNFT = \"Upgrade NFT\";\r\n\r\n  if (nftName === \"Chaos X-18 Mine Aurum\") {\r\n    aurumCost = (56 * Math.pow(1.44, mineLevel - 1)).toFixed(3);\r\n    celiumCost = (14 * Math.pow(1.44, mineLevel - 1)).toFixed(3);\r\n  } else if (nftName === \"ChaosX-18 Mine Celium\") {\r\n    aurumCost = (46 * Math.pow(1.58, mineLevel - 1)).toFixed(3);\r\n    celiumCost = (23 * Math.pow(1.58, mineLevel - 1)).toFixed(3);\r\n  }\r\n\r\n  return {\r\n    aurumCost,\r\n    celiumCost,\r\n    upgradeNFT,\r\n  };\r\n};\r\n  \r\nconst calculateUpgradeTime = (mineLevel, nftName) => {\r\n  const totalSeconds = Math.floor(11 * Math.pow(1.55, mineLevel));\r\n  const hours = Math.floor(totalSeconds / 3600);\r\n  const minutes = Math.floor((totalSeconds % 3600) / 60);\r\n  const seconds = totalSeconds % 60;\r\n  return `${hours} hours ${minutes} minutes ${seconds} seconds`;\r\n};\r\n\r\nconst ViewNftDetailsModal = ({ onClose, description, effect, currentLevel, nextLevel, nftName }) => {\r\n  const modalRef = useRef(null);\r\n  const modalTransition = {\r\n    type: \"spring\",\r\n    ease: \"easeInOut\",\r\n    damping: 30,\r\n  };\r\n    \r\n  return (\r\n    <motion.div\r\n      className={styles.container}\r\n      transition={modalTransition}\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      ref={modalRef}\r\n      onClick={onClose}\r\n    >\r\n\t\t<div className={styles.container_modal} onClick={(e) => e.stopPropagation()}>\r\n        <div className={styles.container_modal_modalHeader}>\r\n          <h3>Description</h3>\r\n          <img\r\n            rel=\"preload\"\r\n            className={styles.container_modal_modalHeader_close}\r\n            src={closeIcon}\r\n            onClick={onClose}\r\n            alt=\"close icon\"\r\n          />\r\n        </div>\r\n\r\n        <div className={styles.container_modal_modalBody}>\r\n          <span>{description}</span>\r\n          {effect !== \"No effect\" && (\r\n            <div>\r\n              <h3>Effect</h3>\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th></th>\r\n                    <th>Current Level</th>\r\n                    <th>Next Level</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>Current Production</td>\r\n                    <td>{calculateProduction(currentLevel, nftName).currentProduction}  </td>\r\n                    <td>{calculateProduction(nextLevel, nftName).currentProduction}  </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Current Cost (Aurum)</td>\r\n                    <td>{calculateProduction(currentLevel, nftName).currentCost.aurumCost}  </td>\r\n                    <td>{calculateProduction(nextLevel, nftName).currentCost.aurumCost}  </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Current Cost (Celium)</td>\r\n                    <td>{calculateProduction(currentLevel, nftName).currentCost.celiumCost}  </td>\r\n                    <td>{calculateProduction(nextLevel, nftName).currentCost.celiumCost}  </td>\r\n                  </tr>\r\n\t\t\t\t  <tr>\r\n                    <td>Burner</td>\r\n                    <td>{calculateUpgradeCost(currentLevel, nftName).upgradeNFT}</td>\r\n                    <td>{calculateUpgradeCost(nextLevel, nftName).upgradeNFT}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Upgrade Time </td>\r\n                    <td>{calculateProduction(currentLevel, nftName).currentUpgradeTime}  </td>\r\n                    <td>{calculateProduction(nextLevel, nftName).currentUpgradeTime}  </td>\r\n                  </tr>\r\n\t\t\t\t  {/*<tr>\r\n                    <td>Time remaining for upgrade:</td>\r\n                    <td>\r\n                      <b>\r\n                        {timeRemaining > 0\r\n                          ? formatTimeRemaining(timeRemaining)\r\n                          : \"None\"}\r\n                      </b>\r\n                    </td>\r\n                    <td></td>\r\n                  </tr>*/}\t\t\t\t  \r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className={styles.container_modal_modalFooter}>\r\n          <Button onClick={onClose} size=\"medium\" color=\"blue\">\r\n            Close\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport {\r\n  calculateProduction,\r\n  calculateSingleProduction,\r\n  calculateUpgradeCost,\r\n  calculateUpgradeTime,\r\n};\r\n\r\nexport default ViewNftDetailsModal;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"whiteUnderlineHover\":\"styles_whiteUnderlineHover__OEuZ3\",\"orangeUnderlineHover\":\"styles_orangeUnderlineHover__-5SM2\",\"container_mainInfo_description\":\"styles_container_mainInfo_description__aWikm\",\"blueUnderlineHover\":\"styles_blueUnderlineHover__k8GXW\",\"divHoverEffect\":\"styles_divHoverEffect__qPP1C\",\"container\":\"styles_container__MLYOD\",\"container_mainInfo\":\"styles_container_mainInfo__Me2mG\",\"container_mainInfo_nftName\":\"styles_container_mainInfo_nftName__+kR6c\"};","import React, { useRef, useState } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport Button from \"../../Button/Button\";\r\nimport Checkbox from \"../../Checkbox/Checkbox\";\r\nimport ViewNftDetailsModal from \"../../Modal/ViewNftDetailsModal/ViewNftDetailsModal\";\r\nimport styles from \"./styles.module.scss\";\r\n\r\nimport {\r\n  calculateProduction,\r\n  calculateSingleProduction,\r\n  calculateUpgradeCost,\r\n  calculateUpgradeTime,\r\n} from \"../../Modal/ViewNftDetailsModal/ViewNftDetailsModal\";\r\n\r\nconst Nft = ({\r\n  nft,\r\n  buttonLoader,\r\n  image,\r\n  functional,\r\n  mineLevel,\r\n  mineLastUpgrade,\r\n  stakeMinesIntoSlot,\r\n  stakeSlot,\r\n  unstakeSlot,\r\n  burnNft,\r\n  onSelect,\r\n  selected,\r\n  stakedSlot,\r\n  fullSlot,\r\n}) => {\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const scrollRef = useRef(null);\r\n\r\n  const cardTransition = {\r\n    type: \"spring\",\r\n    ease: \"easeInOut\",\r\n    damping: 30,\r\n  };\r\n  const Variants = {\r\n    initial: { opacity: 0 },\r\n    whileInView: { opacity: 1 },\r\n  };\r\n\r\n  const openDescriptionModal = () => {\r\n    setModalOpen(true);\r\n  };\r\n  const closeDescriptionModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n  const currentLevel = mineLevel;\r\n  const nextLevel = mineLevel + 1;\r\n\r\n  const shouldShowCheckbox =\r\n    nft?.data.name === \"Chaos X-18 Mine Aurum\" ||\r\n    nft?.data.name === \"ChaosX-18 Mine Celium\" ||\r\n    (nft?.data.name === \"ChaosX-18 Building Slot\" && stakedSlot === false);\r\n\t\r\n  //console.log(\"mineLevel:\", mineLevel);\r\n  \r\n  return (\r\n    <>\r\n      {nft && (\r\n        <motion.div\r\n          className={styles.container}\r\n          transition={cardTransition}\r\n          viewport={{ root: scrollRef, once: true }}\r\n          variants={Variants}\r\n          initial=\"initial\"\r\n          whileInView=\"whileInView\"\r\n        >\r\n          {functional && shouldShowCheckbox && (\r\n            <Checkbox checked={selected} onChange={onSelect} />\r\n          )}\r\n          <img\r\n            rel=\"preload\"\r\n            src={image ? image : `https://ipfs.io/ipfs/${nft?.data.img}`}\r\n            alt={nft?.data.name + \"'s image\"}\r\n          />\r\n          <div className={styles.container_mainInfo}>\r\n            <h2 className={styles.container_mainInfo_nftName}>\r\n              {nft?.data.name === \"Chaos X-18 Mine Aurum\"\r\n                ? \"ChaosX-18 Mine Aurum\"\r\n                : nft?.data.name}\r\n            </h2>\r\n            <span\r\n              className={styles.container_mainInfo_description}\r\n              onClick={openDescriptionModal}\r\n            >\r\n              Details\r\n            </span>\r\n            {functional && (\r\n              <>\r\n                {nft?.data.name === \"ChaosX-18 Building Slot\" &&\r\n                stakedSlot === false ? (\r\n                  <Button\r\n                    onClick={() => stakeSlot(nft)}\r\n                    loader={buttonLoader}\r\n                    size=\"auto\"\r\n                    color=\"blue\"\r\n                  >\r\n                    Stake Slot\r\n                  </Button>\r\n                ) : nft?.data.name === \"ChaosX-18 Building Slot\" &&\r\n                  fullSlot === false &&\r\n                  stakedSlot === true ? (\r\n                  <>\r\n                    <Button\r\n                      onClick={() => stakeMinesIntoSlot(nft)}\r\n                      loader={buttonLoader}\r\n                      size=\"auto\"\r\n                      color=\"blue\"\r\n                    >\r\n                      Stake Mines\r\n                    </Button>\r\n                  </>\r\n                ) : nft?.data.name === \"ChaosX-18 Building Slot\" &&\r\n                  fullSlot === true &&\r\n                  stakedSlot === true ? (\r\n                  <>\r\n                    <Button\r\n                      onClick={() => unstakeSlot(nft)}\r\n                      loader={buttonLoader}\r\n                      size=\"auto\"\r\n                      color=\"blue\"\r\n                    >\r\n                      Unstake Slot\r\n                    </Button>\r\n                  </>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                {nft?.data.name === \"Teleport to ChaosX-18\" && (\r\n                  <Button\r\n                    onClick={() => burnNft(nft)}\r\n                    loader={buttonLoader}\r\n                    size=\"auto\"\r\n                    color=\"blue\"\r\n                  >\r\n                    Burn\r\n                  </Button>\r\n                )}\r\n              </>\r\n            )}\r\n          </div>\r\n        </motion.div>\r\n      )}\r\n      {modalOpen && (\r\n        <ViewNftDetailsModal\r\n\t\t  onClose={closeDescriptionModal}\r\n\t\t  description={\r\n\t\t    nft?.data.description || nft?.data.descr || nft?.data.desc\r\n\t\t  }\r\n\t\t  effect={nft?.data.name ? calculateProduction(mineLevel, nft?.data.name) : \"No effect\"}\r\n          currentLevel={currentLevel} // Passa il livello corrente\r\n          nextLevel={nextLevel} // Passa il livello successivo\r\n\t\t  nftName={nft?.data.name}\r\n        />\r\n\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Nft;\r\n"],"names":["_ref","checked","onChange","_jsxs","className","styles","children","_jsx","type","calculateProduction","mineLevel","nftName","currentProduction","calculateSingleProduction","nextProduction","currentCost","calculateUpgradeCost","nextCost","currentUpgradeTime","calculateUpgradeTime","nextUpgradeTime","parseFloat","Math","pow","toFixed","aurumCost","celiumCost","upgradeNFT","totalSeconds","floor","hours","minutes","seconds","concat","onClose","description","effect","currentLevel","nextLevel","modalRef","useRef","motion","div","transition","ease","damping","initial","opacity","animate","ref","onClick","e","stopPropagation","rel","src","closeIcon","alt","Button","size","color","nft","buttonLoader","image","functional","stakeMinesIntoSlot","mineLastUpgrade","stakeSlot","unstakeSlot","burnNft","onSelect","selected","stakedSlot","fullSlot","_useState","useState","_useState2","_slicedToArray","modalOpen","setModalOpen","scrollRef","shouldShowCheckbox","data","name","_Fragment","viewport","root","once","variants","whileInView","Checkbox","img","loader","ViewNftDetailsModal","descr","desc"],"sourceRoot":""}