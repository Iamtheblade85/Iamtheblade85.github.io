{"version":3,"file":"static/js/356.362d84d0.chunk.js","mappings":"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","sources":["webpack://chaosx-18/./src/components/Checkbox/styles.module.scss?72ad","components/Checkbox/Checkbox.jsx","webpack://chaosx-18/./src/components/Modal/ViewNftDetailsModal/styles.module.scss?f380","components/Modal/ViewNftDetailsModal/ViewNftDetailsModal.jsx","webpack://chaosx-18/./src/components/Nft/MyNftCard/styles.module.scss?af69","components/Nft/MyNftCard/MyNftCard.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"whiteUnderlineHover\":\"styles_whiteUnderlineHover__EwQhO\",\"orangeUnderlineHover\":\"styles_orangeUnderlineHover__tSnCx\",\"blueUnderlineHover\":\"styles_blueUnderlineHover__cP9A3\",\"divHoverEffect\":\"styles_divHoverEffect__1yFKF\",\"checkbox\":\"styles_checkbox__hj+Ln\",\"input\":\"styles_input__QUvp2\",\"checkmark\":\"styles_checkmark__2IdXY\"};","import React from \"react\";\r\nimport styles from \"./styles.module.scss\";\r\n\r\nconst Checkbox = ({ checked, onChange }) => {\r\n  return (\r\n    <label className={styles.checkbox}>\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={checked}\r\n        onChange={onChange}\r\n        className={styles.input}\r\n      />\r\n      <span className={styles.checkmark}></span>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Checkbox;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"styles_container__b7JEH\",\"container_modal\":\"styles_container_modal__7tYxP\",\"container_modal_modalHeader\":\"styles_container_modal_modalHeader__Sw-6H\",\"container_modal_modalHeader_close\":\"styles_container_modal_modalHeader_close__Qx1VI\",\"container_modal_modalBody\":\"styles_container_modal_modalBody__54h2z\",\"container_modal_modalFooter\":\"styles_container_modal_modalFooter__zP3bD\",\"modalHeader\":\"styles_modalHeader__NRX0B\"};","import React, { useRef } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport styles from \"./styles.module.scss\";\r\nimport Button from \"../../Button/Button\";\r\nimport closeIcon from \"../../../assets/images/icons/icons8-close-48.png\";\r\n\r\nconst ViewNftDetailsModal = ({ onClose, description, effect }) => {\r\n  const modalRef = useRef(null);\r\n  const modalTransition = {\r\n    type: \"spring\",\r\n    ease: \"easeInOut\",\r\n    damping: 30,\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      className={styles.container}\r\n      transition={modalTransition}\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      ref={modalRef}\r\n      onClick={onClose}\r\n    >\r\n      <div\r\n        className={styles.container_modal}\r\n        onClick={(e) => e.stopPropagation()}\r\n      >\r\n        <div className={styles.container_modal_modalHeader}>\r\n          <h3>Description</h3>\r\n          <img\r\n            rel=\"preload\"\r\n            className={styles.container_modal_modalHeader_close}\r\n            src={closeIcon}\r\n            onClick={onClose}\r\n            alt=\"close icon\"\r\n          />\r\n        </div>\r\n\r\n        <div className={styles.container_modal_modalBody}>\r\n          <span>{description}</span>\r\n          {effect !== \"No effect\" && <h3>Effect</h3>}\r\n          <span>{effect}</span>\r\n        </div>\r\n\r\n        <div className={styles.container_modal_modalFooter}>\r\n          <Button onClick={onClose} size=\"medium\" color=\"blue\">\r\n            Close\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default ViewNftDetailsModal;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"whiteUnderlineHover\":\"styles_whiteUnderlineHover__5Sujc\",\"orangeUnderlineHover\":\"styles_orangeUnderlineHover__TpQoR\",\"container_mainInfo_description\":\"styles_container_mainInfo_description__q0FXj\",\"blueUnderlineHover\":\"styles_blueUnderlineHover__YOj8h\",\"divHoverEffect\":\"styles_divHoverEffect__yKvV-\",\"container\":\"styles_container__922Gi\",\"container_mainInfo\":\"styles_container_mainInfo__b15E2\",\"container_mainInfo_nftName\":\"styles_container_mainInfo_nftName__LVWZ5\"};","import React, { useRef, useState } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport Button from \"../../Button/Button\";\r\nimport Checkbox from \"../../Checkbox/Checkbox\";\r\nimport ViewNftDetailsModal from \"../../Modal/ViewNftDetailsModal/ViewNftDetailsModal\";\r\nimport styles from \"./styles.module.scss\";\r\n\r\nconst Nft = ({\r\n  nft,\r\n  buttonLoader,\r\n  image,\r\n  functional,\r\n  mineLevel,\r\n  stakeMinesIntoSlot,\r\n  stakeSlot,\r\n  unstakeSlot,\r\n  burnNft,\r\n  onSelect,\r\n  selected,\r\n  stakedSlot,\r\n  fullSlot,\r\n}) => {\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const scrollRef = useRef(null);\r\n\r\n  const cardTransition = {\r\n    type: \"spring\",\r\n    ease: \"easeInOut\",\r\n    damping: 30,\r\n  };\r\n  const Variants = {\r\n    initial: { opacity: 0 },\r\n    whileInView: { opacity: 1 },\r\n  };\r\n\r\n  const openDescriptionModal = () => {\r\n    setModalOpen(true);\r\n  };\r\n  const closeDescriptionModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  const shouldShowCheckbox =\r\n    nft?.data.name === \"Chaos X-18 Mine Aurum\" ||\r\n    nft?.data.name === \"ChaosX-18 Mine Celium\" ||\r\n    (nft?.data.name === \"ChaosX-18 Building Slot\" && stakedSlot === false);\r\n\t\r\n  console.log(\"mineLevel:\", mineLevel);\r\n  const calculateProduction = (mineLevel, nftName) => {\r\n    if (nft?.data.name === \"Chaos X-18 Mine Aurum\") {\r\n      return 3 * mineLevel * Math.pow(1.3, mineLevel);\r\n    } else if (nft?.data.name === \"ChaosX-18 Mine Celium\") {\r\n      return 2 * mineLevel * Math.pow(1.3, mineLevel);\r\n    }\r\n    // Gestisci altri casi se necessario\r\n    return 0; // Valore predefinito nel caso in cui il nome non corrisponda a nessun tipo noto\r\n  };\r\n  \r\n  return (\r\n    <>\r\n      {nft && (\r\n        <motion.div\r\n          className={styles.container}\r\n          transition={cardTransition}\r\n          viewport={{ root: scrollRef, once: true }}\r\n          variants={Variants}\r\n          initial=\"initial\"\r\n          whileInView=\"whileInView\"\r\n        >\r\n          {functional && shouldShowCheckbox && (\r\n            <Checkbox checked={selected} onChange={onSelect} />\r\n          )}\r\n          <img\r\n            rel=\"preload\"\r\n            src={image ? image : `https://ipfs.io/ipfs/${nft?.data.img}`}\r\n            alt={nft?.data.name + \"'s image\"}\r\n          />\r\n          <div className={styles.container_mainInfo}>\r\n            <h2 className={styles.container_mainInfo_nftName}>\r\n              {nft?.data.name === \"Chaos X-18 Mine Aurum\"\r\n                ? \"ChaosX-18 Mine Aurum\"\r\n                : nft?.data.name}\r\n            </h2>\r\n            <span\r\n              className={styles.container_mainInfo_description}\r\n              onClick={openDescriptionModal}\r\n            >\r\n              Details\r\n            </span>\r\n            {functional && (\r\n              <>\r\n                {nft?.data.name === \"ChaosX-18 Building Slot\" &&\r\n                stakedSlot === false ? (\r\n                  <Button\r\n                    onClick={() => stakeSlot(nft)}\r\n                    loader={buttonLoader}\r\n                    size=\"auto\"\r\n                    color=\"blue\"\r\n                  >\r\n                    Stake Slot\r\n                  </Button>\r\n                ) : nft?.data.name === \"ChaosX-18 Building Slot\" &&\r\n                  fullSlot === false &&\r\n                  stakedSlot === true ? (\r\n                  <>\r\n                    <Button\r\n                      onClick={() => stakeMinesIntoSlot(nft)}\r\n                      loader={buttonLoader}\r\n                      size=\"auto\"\r\n                      color=\"blue\"\r\n                    >\r\n                      Stake Mines\r\n                    </Button>\r\n                  </>\r\n                ) : nft?.data.name === \"ChaosX-18 Building Slot\" &&\r\n                  fullSlot === true &&\r\n                  stakedSlot === true ? (\r\n                  <>\r\n                    <Button\r\n                      onClick={() => unstakeSlot(nft)}\r\n                      loader={buttonLoader}\r\n                      size=\"auto\"\r\n                      color=\"blue\"\r\n                    >\r\n                      Unstake Slot\r\n                    </Button>\r\n                  </>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                {nft?.data.name === \"Teleport to ChaosX-18\" && (\r\n                  <Button\r\n                    onClick={() => burnNft(nft)}\r\n                    loader={buttonLoader}\r\n                    size=\"auto\"\r\n                    color=\"blue\"\r\n                  >\r\n                    Burn\r\n                  </Button>\r\n                )}\r\n              </>\r\n            )}\r\n          </div>\r\n        </motion.div>\r\n      )}\r\n      {modalOpen && (\r\n        <ViewNftDetailsModal\r\n          onClose={closeDescriptionModal}\r\n          description={\r\n            nft?.data.description || nft?.data.descr || nft?.data.desc\r\n          }\r\n          effect={nft?.data.name ? calculateProduction(mineLevel, nft?.data.name) : \"No effect\"}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Nft;\r\n"],"names":["_ref","checked","onChange","_jsxs","className","styles","children","_jsx","type","onClose","description","effect","modalRef","useRef","motion","div","transition","ease","damping","initial","opacity","animate","ref","onClick","e","stopPropagation","rel","src","closeIcon","alt","Button","size","color","nft","buttonLoader","image","functional","mineLevel","stakeMinesIntoSlot","stakeSlot","unstakeSlot","burnNft","onSelect","selected","stakedSlot","fullSlot","_useState","useState","_useState2","_slicedToArray","modalOpen","setModalOpen","scrollRef","shouldShowCheckbox","data","name","console","log","_Fragment","viewport","root","once","variants","whileInView","Checkbox","concat","img","loader","ViewNftDetailsModal","descr","desc","nftName","Math","pow","calculateProduction"],"sourceRoot":""}